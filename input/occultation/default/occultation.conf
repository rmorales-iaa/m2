#------------------------------------------------------------------------------
Occultation {
  //---------------------------------------------------------------------------
  sourceDetection {
    //-------------------------------------------------------------------------
    sigmaMultiplier                            = 2.5   //used in the calculation of detection level = background + (backgroundRMS * sigmaMultiplier)
    maxAllowedPixDistanceMatch                 = 3    //max allowed pix distance to conside two sources are equal
    //-------------------------------------------------------------------------
    sourceMinPixCount = 3
    sourceMaxPixCount = 500
    roundSources      = 2
    preciceCentroids  = 0
    //-------------------------------------------------------------------------
    mask {
      //-----------------------------------------------------------------------
      valuesArPercentages = 1 //1  = consider the values as percentage of the image dimesion
                              //0 = consider the values as absolute pixel value
      //-----------------------------------------------------------------------
      rectangle {
        xLeftBorderPix   = 7
        xRightBorderPix  = 7
        yBottomBorderPix = 7
        yTopBorderPix    = 7
      }
      //-----------------------------------------------------------------------
    }
    //-------------------------------------------------------------------------
    manualTrackig {

      //To create the manual tracking, please;
      // 0) Open the png file of the very first image and locate the source that must be tracked
      //    The png file is at: OBJECT/0_source_detection/VERY_FIRST_IMAGE_NAME/
      // 1) Open the directory containing the not matched sources at:  "OBJECT/1_source_evolution/source_not_matched/"
      // 2) Open the csv named with the source locted in step 0
      // 4) Open the png file associated with image detailed in column: "source_image"
      //    Visually, match the source located in step 0 with a source in this image
      // 5) Create an entry in 'matchSource' using the very first three values of the csv
      //      The fourth value is the identifier of the source located in step 4
      //-----------------------------------------------------------------------
      #Images that must be ignored from the image sequence
      #Format:
      #  ["image", "image"]
      #Example:
      #  skipImages = ["imageA","imageB"]
      skipImages = []

      #Images that must be ignored from the image range
      #The observig time of the first image and the last image
      #define the observing range of the images that will be discarded
      #The image name sort and the observing time sort must have the same order
      #First and last image are also skipped
      skipImageRange = []
      #Format:
      #  ["imageMin imageMax"
      #  , "imageMin1 imageMax1"]
      #Example:
      #  skipImageRange = ["Huya-125_R Huya-167_R"]

      #Manual match source
      #Format:
      #  ["image ref_image ref_image_source image_source"
      #  , "image1 ref_image1 ref_image_source_id1 image_source_id1"]
      #Example:
      #  matchSource = ["Huya-007_R Huya-006_R 0 1"]
      matchSource = []

      #Manual match source for fixed ID sources
      #Used when the same source has the same ID in all images
      #Usally is the very first ID (value 0)
      #Format:
      #  ["ref_image_source_id image_source_id"
      #  , "ref_image_source_id1 image_source_id1"]
      #Example:
      #  matchSourceFixedID = ["0 0"]
      matchSourceFixedID = []
      //-----------------------------------------------------------------------
    }
    //-------------------------------------------------------------------------
  }
  //---------------------------------------------------------------------------
  aperturePhotometry {
    //-------------------------------------------------------------------------
    minAperture       = 1.2
    anularAperture    = 10
    maxAperture       = 13
    //-------------------------------------------------------------------------
  }
  //---------------------------------------------------------------------------
  commonSourceFiltering {
    //-------------------------------------------------------------------------
    maxAllowedNormalizedStdev  = 300
    //-------------------------------------------------------------------------
  }
  //---------------------------------------------------------------------------
  //options:
  // 1: astroalign (python)
  // 2: invariant triangle (scala)
  // 3: closest source (scala)
  registration {
    //-------------------------------------------------------------------------
    algorithmSeq = [2,1,3]   //Try in order, and return the first one that succeeds
    //-------------------------------------------------------------------------
    astroAlignPy {
      call           = "python3 input/astroalignPy/astroalignPy.py"
      temporalDir    = "output/astroalignPy_tmp/"  //used to manage subImages
    }
    //-------------------------------------------------------------------------
    closestSourceAlgorithm {
      //-----------------------------------------------------------------------
      maxAllowedPixDistanceMatch = ${Occultation.sourceDetection.maxAllowedPixDistanceMatch}
      useResidualMedianForAFT = 1  //if 0, use a standard algorithm for calculating aft like "umenaya"
      //if 1, use median of the residuals to calculate the aft only with translation

      residualMedianSigmaClipping = 2.5
      //-----------------------------------------------------------------------
    }
    //-------------------------------------------------------------------------
    invariantTriangle { //'INVARIANT_TRIANGLE'
      //-----------------------------------------------------------------------
      minAllowedImageSourceCount           = 3
      //-----------------------------------------------------------------------
      maxSourceCountConsidered             = 30
      //-----------------------------------------------------------------------
      searchCircleRadius                   = 0.2 //Circle raadius to search neigbours in the KDTreee. Empirical value from astroalign
      //-----------------------------------------------------------------------
      ransac {
        //----------------------------------------------------------------------
        minAllowedMatches                  = 20  //min matches to validate the model

        maxIterations                      = 1000
        maxAllowedPixDistanceTolerance     = 2  //The pixel distance tolerance to assume two invariant points are the same

        minMatchPercentageToValidateModel  = 45  //min percentage of compatible vertex to validate model
        maxMatchPercentageToValidateModel  = 99  //min percentage of compatible vertex to validate model

        percentageStepToValidateModel      = 1   //percentage step from 'maxPercentage' to 'minPercentage'
        //---------------------------------------------------------------------
      }
      //-----------------------------------------------------------------------
      asterismPolygonSideCount             = 3  //triangles!
      //-----------------------------------------------------------------------
    }
    //-------------------------------------------------------------------------
  }
  //---------------------------------------------------------------------------
  croppy {
    //-------------------------------------------------------------------------
    croppyX_PixSize = 64
    croppyY_PixSize = 64
    //-------------------------------------------------------------------------
    rectagleX_PixSize = 8
    rectagleY_PixSize = 8
    //-------------------------------------------------------------------------
  }
  //---------------------------------------------------------------------------
  gif {
    //-------------------------------------------------------------------------
    build_gif = 1
    //-------------------------------------------------------------------------
    speed_ms = 125
    //-------------------------------------------------------------------------
  }
  //---------------------------------------------------------------------------
}
#------------------------------------------------------------------------------